package bits.arrays;

import bits.*;

IntegerArray
{
     uint16             numElems;
     int8               int8List[numElems];
     uint8              uint8List[numElems];
     int16              int16List[numElems];
     uint16             uint16List[numElems];
     int32              int32List[numElems];
     uint32             uint32List[numElems];
};


CompoundArray
{
    int16       numItems;
    ItemA       a[numItems];
    ItemB       b[numItems];
};


MixedArray
{
    uint16      numItems;
    AnyItem     items[numItems];
};


VarArray
{
    ItemA       a[];
    ItemB   	b;
    uint16      len : len == lengthof a;
};


ParamArray
{
    uint16                          numItems;
    uint16		                    size[numItems];
    ParamBlock(size[block$index])   block[numItems];
};


OptionalArraySequence
{
	int8	kleinesArray[3];
	uint16	count;
	int16	a[count]    if count > 0;
	int16	b[1]        if count == 0;
};


StringArraySequence
{
	string	name;
	bit:4	byteCount;
	string	text[byteCount];
};
