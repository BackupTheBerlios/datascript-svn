package innerunion;

enum bit:1 Sign
{
    POSITIVE = 0,
    NEGATIVE = 1
};


// The following presents a workaround for inner unions that are currently
// broken.

/*
 * Unsigned integer with variable bit size and a variable size indicator.
 * Range is 0 to 2^32-1. bit size varies from 9 to 36 bits. Supports 5 ranges.
 */
VarUnsignedInt
{
    bit:1 size1;
    bit:1 size2 if size1 == 1;

    /** Value with bit length depending on size indicators. */
    UIVariable(size1, size2) value;
};

union UIVariable(bit:1 size1, bit:1 size2)
{
      /** Range 0 to 255. Bit size 9. */
        bit:8  value1 : size1 == 0;

      /** Range 0 to 4095. Bit size 14. */
        bit:12 value2 : size1 == 1 && size2 == 0;

};

