<%
/* BSD License
 *
 * Copyright (c) 2007, Henrik Wedekind, Harman/Becker Automotive Systems
 * All rights reserved.
 * 
 * This software is derived from previous work
 * Copyright (c) 2003, Godmar Back.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 * 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 * 
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 * 
 *     * Neither the name of Harman/Becker Automotive Systems or
 *       Godmar Back nor the names of their contributors may be used to
 *       endorse or promote products derived from this software without
 *       specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
%>
<%@ jet package="datascript.jet.html" 
        imports="datascript.ast.* datascript.emit.html.*" 
        class="LinkedType" %>
<%
    DefaultHTMLEmitter e = (DefaultHTMLEmitter) argument;
    TypeInterface paramType = e.getCurrentType();

	String styleStr = "";
    String ankerClass = "";
    String titleText = "Type: ";
    String paramTypeName = TypeNameEmitter.getTypeName(paramType);

    while (paramType instanceof ArrayType)
    {
        paramType = ((ArrayType)paramType).getElementType();
        ankerClass = "arrayLink";
        titleText += "array of ";
    }

	if (!TypeNameEmitter.isBuiltinType(paramType))
	{
        // generate styles depends on the fiel type

        if (paramType instanceof SequenceType)
        {
            ankerClass = "sequenceLink";
            titleText += "Sequence";
        }
        else if (paramType instanceof UnionType)
        {
            ankerClass = "unionLink";
            titleText += "Union";
        }
        else if (paramType instanceof EnumType)
        {
	        ankerClass = "enumLink";
	        titleText += "Enum";
        }
        else if (paramType instanceof datascript.ast.Subtype)
        {
            ankerClass = "subtypeLink";
            titleText += "Subtype";
        }
        else if (paramType instanceof SqlMetadataType)
        {
            ankerClass = "sqlMetaLink";
            titleText += "SQL Metadata";
        }
        else if (paramType instanceof SqlPragmaType)
        {
            ankerClass = "sqlPragmaLink";
            titleText += "SQL Pragma";
        }
        else if (paramType instanceof SqlTableType)
        {
            ankerClass = "sqlTableLink";
            titleText += "SQL Table";
        }
        else if (paramType instanceof SqlDatabaseType)
        {
            ankerClass = "sqlDBLink";
            titleText += "SQL Database";
        }
        else if (paramType instanceof TypeInstantiation)
        {
            ankerClass = "instantLink";
            titleText += "TypeInstantiation";
        }
        else if (paramType instanceof TypeReference)
        {
            ankerClass = "referenceLink";
            titleText += "TypeReference";
        }
        else
        {
        	%><span title="Type: <%=paramType.getClass().getName()%>"><%=paramTypeName%></span><%
	        //System.out.println(tne.getTypeName(paramType) + " is unknown.");
		    return stringBuffer.toString();
        }

		%><a class="<%=ankerClass%>" href="<%=e.getCurrentFolder().equals(ContentEmitter.contentFolder)? "" : (ContentEmitter.contentFolder+"/")%><%=paramTypeName%>.html" title="<%=titleText%>" target="detailedDocu" <%=styleStr%>><%=paramTypeName%></a><%
	}
	else
	{
        %><%=paramTypeName%><%
    }
%>