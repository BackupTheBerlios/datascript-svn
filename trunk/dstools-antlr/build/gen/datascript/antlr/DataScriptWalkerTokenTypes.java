// $ANTLR 2.7.6 (2005-12-22): "DataScriptWalker.g" -> "DataScriptWalker.java"$

package datascript.antlr;
import datascript.tools.ToolContext;

public interface DataScriptWalkerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int FIELD = 4;
	int STRUCT = 5;
	int UNION = 6;
	int PARAM = 7;
	int INST = 8;
	int ARRAY = 9;
	int LABEL = 10;
	int BLOCK = 11;
	int CAST = 12;
	int MEMBERS = 13;
	int TYPEREF = 14;
	int UPLUS = 15;
	int UMINUS = 16;
	int ITEM = 17;
	int BIT = 18;
	int UINT8 = 19;
	int UINT16 = 20;
	int UINT32 = 21;
	int UINT64 = 22;
	int INT8 = 23;
	int INT16 = 24;
	int INT32 = 25;
	int INT64 = 26;
	int ARRAYELEM = 27;
	int INTEGER_LITERAL = 28;
	int PLUS = 29;
	int MINUS = 30;
	int MULTIPLY = 31;
	int DIVIDE = 32;
	int MODULO = 33;
	int LSHIFT = 34;
	int RSHIFT = 35;
	int OR = 36;
	int XOR = 37;
	int AND = 38;
	int TILDE = 39;
	int EQ = 40;
	int NE = 41;
	int LT = 42;
	int LE = 43;
	int GE = 44;
	int GT = 45;
	int LOGICALOR = 46;
	int LOGICALAND = 47;
	int BANG = 48;
	int QUESTIONMARK = 49;
	int DOT = 50;
	int LPAREN = 51;
	int SEMICOLON = 52;
	int COLON = 53;
	int DOUBLECOLON = 54;
	int LITERAL_condition = 55;
	int ID = 56;
	int COMMA = 57;
	int RPAREN = 58;
	int LCURLY = 59;
	int RCURLY = 60;
	int LITERAL_enum = 61;
	int DOC = 62;
	int ASSIGN = 63;
	int LITERAL_bitmask = 64;
	int LITERAL_const = 65;
	int LITERAL_if = 66;
	int LITERAL_union = 67;
	// "uint8" = 68
	// "uint16" = 69
	// "uint32" = 70
	// "uint64" = 71
	// "int8" = 72
	// "int16" = 73
	// "int32" = 74
	// "int64" = 75
	int LITERAL_string = 76;
	int LITERAL_bit = 77;
	int LITERAL_big = 78;
	int LITERAL_little = 79;
	int LBRACKET = 80;
	int RBRACKET = 81;
	int MULTASSIGN = 82;
	int DIVASSIGN = 83;
	int MODASSIGN = 84;
	int PLUSASSIGN = 85;
	int MINUSASSIGN = 86;
	int LSHIFTASSIGN = 87;
	int RSHIFTASSIGN = 88;
	int ANDASSIGN = 89;
	int XORASSIGN = 90;
	int ORASSIGN = 91;
	int LITERAL_forall = 92;
	int LITERAL_in = 93;
	int RANGE = 94;
	int LITERAL_sizeof = 95;
	int LITERAL_lengthof = 96;
	int LITERAL_is = 97;
	int STRING_LITERAL = 98;
}
