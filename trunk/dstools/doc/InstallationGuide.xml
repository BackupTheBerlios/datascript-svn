<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article>
  <title>Installing and Building the DataScript Tools</title>

  <articleinfo>
    <author>
      <firstname>Harald</firstname>

      <surname>Wellmann</surname>

      <email>HWellmann@harmanbecker.com</email>
    </author>

    <affiliation>
      <orgname>Harman/Becker Automotive Systems</orgname>
    </affiliation>

    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>

        <date>28 September 2006</date>
      </revision>
    </revhistory>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>This is a short guide for installing and running the datascript
    tools and for getting the source and building the tools from
    source.</para>
  </section>

  <section>
    <title>Installing and Running</title>

    <para>T.b.d.</para>
  </section>

  <section>
    <title>Building from Source</title>

    <para>The only supported build environment for the dstools project is
    Eclipse 3.1 or 3.2. If you know what you are doing, you will also be able
    to build dstools in other environments, but Eclipse is the only one that
    the authors will document and support.</para>

    <section>
      <title>Installing Eclipse</title>

      <para>Subclipse is a Subversion client plugin for Eclipse. Using this
      plugin, you can directly access Subversion repositories from
      Eclipse.</para>

      <para><itemizedlist>
          <listitem>
            <para>Install JDK 1.5.0 from
            <literal>http://java.sun.com</literal>.</para>
          </listitem>

          <listitem>
            <para>Install Eclipse 3.2 from
            <literal>http://www.eclipse.org</literal>.</para>
          </listitem>

          <listitem>
            <para>Start Eclipse and set the proxy options in <emphasis>Window
            | Preferences | Install/Update</emphasis>.</para>
          </listitem>

          <listitem>
            <para>Goto <emphasis>Help | Software Updates | Find and
            Install</emphasis> to install the Eclipse Modelling Framework
            (EMF).</para>
          </listitem>

          <listitem>
            <para>Select <emphasis>Callisto Discovery Site</emphasis>. EMF is
            in the category <emphasis>Models and Model
            Development</emphasis>.</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>Installing the Subclipse plugin</title>

      <para>Subclipse is a Subversion client plugin for Eclipse. Using this
      plugin, you can directly access Subversion repositories from
      Eclipse.</para>

      <itemizedlist>
        <listitem>
          <para>Goto <emphasis>Help | Software Updates | Find and
          Install</emphasis>. Select <emphasis>Search for new features to
          install</emphasis> and click <emphasis>Next</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Click on <emphasis>New Remote Site... </emphasis>Enter name
          <literal>Subclipse</literal> and URL
          <literal>http://subclipse.tigris.org/update_1.0.x</literal>.</para>
        </listitem>

        <listitem>
          <para>Select the Subclipse Site and click
          <emphasis>Finish</emphasis>. The Search Results should display a
          feature named <emphasis>Subclipse</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select the Subclipse feature and click Next. Accept the
          license terms and click Next. Click Finish.</para>
        </listitem>

        <listitem>
          <para>There will be a warning <emphasis>You are about to install an
          unsigned feature</emphasis>. Simply click
          <emphasis>Install</emphasis>.</para>
        </listitem>

        <listitem>
          <para>You will be prompted to restart the workbench. Click
          <emphasis>Yes</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select <emphasis>Window | Open Perspective | Other... | SVN
          Repository Exploring</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select <emphasis>Window | Show View | SVN
          Repository</emphasis>.</para>
        </listitem>

        <listitem>
          <para>If you are forced to use a proxy for HTTP and HTTPS, you have
          to edit a configuration file so that Subversion will use your proxy.
          Using any text editor, open the file servers in the folder
          <literal>%APPDATA%\Subversion</literal>. If this folder does not
          exist, make sure you did not miss any of the preceding steps. The
          folder gets created when you first open the SVN Repository
          view.</para>

          <para>Go to the <literal>[global]</literal> section at the end of
          the file, uncomment and edit the lines
          <literal>http-proxy-host</literal> and
          <literal>http-proxy-port</literal> to reflect the proxy settings at
          your site.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Creating a local dstools project from the Subversion
      repository</title>

      <itemizedlist>
        <listitem>
          <para>In Eclipse, go to the SVN Repository view in the SVN
          Repository Exploring perspective.</para>
        </listitem>

        <listitem>
          <para>Select <emphasis>New | Repository Location</emphasis> from the
          context menu.</para>
        </listitem>

        <listitem>
          <para>Fill in the URL
          <literal>https://svn.sourceforge.net/svnroot/dstools</literal>.
          Click <emphasis>Finish</emphasis>.</para>
        </listitem>

        <listitem>
          <para>When prompted for accepting a digital certificate, click
          <emphasis>Accept Permanently</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Expand the repository tree and select the subnode
          <literal>trunk/dstools</literal>.</para>
        </listitem>

        <listitem>
          <para>Select <emphasis>Checkout...</emphasis> from the context menu
          of this node.</para>
        </listitem>

        <listitem>
          <para>Enter a project name. If you are expecting to work on multiple
          versions in parallel (e.g. trunk and development), make sure to
          select a meaningful name, e.g. <literal>dstools-trunk</literal>.
          Click <emphasis>Finish</emphasis>.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Setting up the project properties</title>

      <itemizedlist>
        <listitem>
          <para>Switch to the Java perspective and select your new project
          <literal>dstools-trunk</literal>.</para>
        </listitem>

        <listitem>
          <para>Select the Ant build file <literal>build.xml</literal> from
          the root directory and open <emphasis>Run As | 2 Ant
          Build...</emphasis> from the context menu. This will open the
          <emphasis>External tools</emphasis> dialog.</para>
        </listitem>

        <listitem>
          <para>Select the <emphasis>Refresh</emphasis> tab and activate the
          checkbox <emphasis>Refresh resources upon
          completion</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select the <emphasis>Build</emphasis> tab and deactivate
          <emphasis>Build before launch</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select the <emphasis>Classpath</emphasis> tab and click
          <emphasis>Add External JARs...</emphasis> Add
          <literal>%ECLIPSE_HOME%\plugins\org.junit_3.8.1\junit.jar</literal>.</para>
        </listitem>

        <listitem>
          <para>Select the <emphasis>JRE</emphasis> tab and activate the
          radiobutton <emphasis>Run in the same JRE as the
          workspace</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Click <emphasis>Apply</emphasis> and
          <emphasis>Close</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Select <emphasis>Window | Show View | Ant</emphasis>.</para>
        </listitem>

        <listitem>
          <para>Goto the Ant view and select <emphasis>Add
          Buildfiles...</emphasis> from the context menu.</para>
        </listitem>

        <listitem>
          <para>Select <literal>dstools-trunk/build.xml</literal> and click
          OK.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Building the dstools project</title>

      <para>Go to the Ant view, open the dstools node and double-click on the
      all target. This will run an Ant build that writes diagnostic messages
      to a console tab of the Eclipse workbench.</para>

      <para>The build produces class files in <literal>build/classes</literal>
      and a JAR file <literal>datascript.jar</literal> in
      <literal>build/jar</literal>.</para>
    </section>
  </section>
</article>