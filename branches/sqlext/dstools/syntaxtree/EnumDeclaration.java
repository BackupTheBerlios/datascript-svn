//
// Generated by JTB 1.2.2
//

package datascript.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * nodeChoice -> ( &lt;ENUM&gt; | &lt;BITMASK&gt; )
 * builtinType -> BuiltinType()
 * nodeOptional -> [ &lt;IDENTIFIER&gt; ]
 * nodeToken -> "{"
 * enumItem -> EnumItem()
 * nodeListOptional -> ( "," EnumItem() )*
 * nodeToken1 -> "}"
 * </PRE>
 */
public class EnumDeclaration implements Node {
   public NodeChoice nodeChoice;
   public BuiltinType builtinType;
   public NodeOptional nodeOptional;
   public NodeToken nodeToken;
   public EnumItem enumItem;
   public NodeListOptional nodeListOptional;
   public NodeToken nodeToken1;

   public EnumDeclaration(NodeChoice n0, BuiltinType n1, NodeOptional n2, NodeToken n3, EnumItem n4, NodeListOptional n5, NodeToken n6) {
      nodeChoice = n0;
      builtinType = n1;
      nodeOptional = n2;
      nodeToken = n3;
      enumItem = n4;
      nodeListOptional = n5;
      nodeToken1 = n6;
   }

   public EnumDeclaration(NodeChoice n0, BuiltinType n1, NodeOptional n2, EnumItem n3, NodeListOptional n4) {
      nodeChoice = n0;
      builtinType = n1;
      nodeOptional = n2;
      nodeToken = new NodeToken("{");
      enumItem = n3;
      nodeListOptional = n4;
      nodeToken1 = new NodeToken("}");
   }

   public void accept(datascript.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(datascript.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

